module Cabs;
import * from ABS.StdLib;
interface ArrayInt {
Int getV(Int indx);
Unit setV(Int indx, Int value);
}
class ArrayIntC(Int size) implements ArrayInt{
List<Int> list = copy(0, size);
Int getV(Int indx) {
return nth(this.list, indx);
}
Unit setV(Int indx, Int value) {
Int i = 0;
List<Int> prev = Nil;
List<Int> post = list;
while (i < indx) {
Int elem = head(post);
prev = appendright(prev, elem);
post = tail(post);
i = i + 1;
}
prev = appendright(prev, value);
post = tail(post);
this.list = concatenate(prev, post);
}
}
interface ArrayBool {
Bool getV(Int indx);
Unit setV(Int indx, Bool value);
}
class ArrayBoolC(Int size) implements ArrayBool{
List<Bool> list = copy(False, size);
Bool getV(Int indx) {
return nth(this.list, indx);
}
Unit setV(Int indx, Bool value) {
Int i = 0;
List<Bool> prev = Nil;
List<Bool> post = list;
while (i < indx) {
Bool elem = head(post);
prev = appendright(prev, elem);
post = tail(post);
i = i + 1;
}
prev = appendright(prev, value);
post = tail(post);
this.list = concatenate(prev, post);
}
}
interface GLOBAL {
ArrayInt retrievearr();
Int getarr(Int indx);
Unit setarr(Int indx, Int val);
Bool getvar2();
Unit setvar2(Bool val);
Int getvar1();
Unit setvar1(Int val);
Unit initialize();
}
class GlobalVariables() implements GLOBAL {
ArrayInt arr;
Bool var2 = False;
Int var1 = 0;
Unit initialize() {
arr = new ArrayIntC(10);
}
ArrayInt retrievearr() {
return arr;
}
Int getarr(Int indx) {
return await arr!getV(indx);
}
Unit setarr(Int indx, Int val) {
await arr!setV(indx, val);
}
Bool getvar2() {
return var2;
}
Unit setvar2(Bool val) {
var2 = val;
}
Int getvar1() {
return var1;
}
Unit setvar1(Int val) {
var1 = val;
}
}
interface Intmain {
Int main();
}
class Impmain(GLOBAL globalval) implements Intmain {
Int main() {
Int aux_var_0 = 10;
await globalval!setvar1(aux_var_0);
Int aux_var_1 = 12;
Int aux_var_2 = 12;
Bool aux_var_3 = (aux_var_1 == aux_var_2);
await globalval!setvar2(aux_var_3);
Int aux_var_4 = await globalval!getvar1();
Int aux_var_5 = 10;
Bool aux_var_6 = (aux_var_4 == aux_var_5);
Bool aux_var_7 = await globalval!getvar2();
Bool aux_var_8 = (aux_var_6 && aux_var_7);
if (aux_var_8) {
Int aux_var_9 = 1;
Int aux_var_10 = (-aux_var_9);
await globalval!setvar1(aux_var_10);
}
ArrayInt localArr = new ArrayIntC(10);
Int aux_var_11 = 666;
Int aux_var_12 = 0;
Int aux_var_13 = 5;
aux_var_12 = aux_var_12 + (1 * aux_var_13);
await globalval!setarr(aux_var_12, aux_var_11);
Int aux_var_14 = 0;
Int aux_var_15 = 5;
aux_var_14 = aux_var_14 + (1 * aux_var_15);
Int aux_var_16 = await globalval!getarr(aux_var_14);
await globalval!setvar1(aux_var_16);
Int aux_var_17 = 666;
Int aux_var_18 = 0;
Int aux_var_19 = 5;
aux_var_18 = aux_var_18 + (1 * aux_var_19);
await localArr!setV(aux_var_18, aux_var_17);
Int aux_var_20 = 0;
Int aux_var_21 = 5;
aux_var_20 = aux_var_20 + (1 * aux_var_21);
Int aux_var_22 = await localArr!getV(aux_var_20);
await globalval!setvar1(aux_var_22);
Int aux_var_23 = 0;
return aux_var_23;
}
}
{
GLOBAL globalval = new GlobalVariables();
await globalval!initialize();
Intmain prog = new Impmain(globalval);
await prog!main();
}
