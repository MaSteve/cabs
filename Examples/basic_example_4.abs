module Cabs;
import * from ABS.StdLib;
interface ArrayInt {
Int getV(Int indx);
Unit setV(Int indx, Int value);
}
class ArrayIntC(Int size) implements ArrayInt{
List<Int> list = copy(0, size);
Int getV(Int indx) {
return nth(this.list, indx);
}
Unit setV(Int indx, Int value) {
Int i = 0;
List<Int> prev = Nil;
List<Int> post = list;
while (i < indx) {
Int elem = head(post);
prev = appendright(prev, elem);
post = tail(post);
i = i + 1;
}
prev = appendright(prev, value);
post = tail(post);
this.list = concatenate(prev, post);
}
}
interface ArrayBool {
Bool getV(Int indx);
Unit setV(Int indx, Bool value);
}
class ArrayBoolC(Int size) implements ArrayBool{
List<Bool> list = copy(False, size);
Bool getV(Int indx) {
return nth(this.list, indx);
}
Unit setV(Int indx, Bool value) {
Int i = 0;
List<Bool> prev = Nil;
List<Bool> post = list;
while (i < indx) {
Bool elem = head(post);
prev = appendright(prev, elem);
post = tail(post);
i = i + 1;
}
prev = appendright(prev, value);
post = tail(post);
this.list = concatenate(prev, post);
}
}
interface GLOBAL {
Int getvar();
Unit setvar(Int val);
Int getvar2();
Unit setvar2(Int val);
Unit initialize();
}
class GlobalVariables() implements GLOBAL {
Int var = 0;
Int var2 = 0;
Unit initialize() {
}
Int getvar() {
return var;
}
Unit setvar(Int val) {
var = val;
}
Int getvar2() {
return var2;
}
Unit setvar2(Int val) {
var2 = val;
}
}
interface Intf {
Unit f();
}
interface Intg {
Unit g();
}
interface Intmain {
Int main();
}
class Impf(GLOBAL globalval) implements Intf {
Unit f() {
Int aux_var_0 = 1;
await globalval!setvar(aux_var_0);
Int aux_var_1 = 2;
await globalval!setvar(aux_var_1);
}
}
class Impg(GLOBAL globalval) implements Intg {
Unit g() {
Int aux_var_2 = 10;
Int aux_var_3 = await globalval!getvar();
Int aux_var_4 = (aux_var_2 * aux_var_3);
Int aux_var_5 = await globalval!getvar();
Int aux_var_6 = (aux_var_4 + aux_var_5);
await globalval!setvar2(aux_var_6);
}
}
class Impmain(GLOBAL globalval) implements Intmain {
Int main() {
Intf aux_var_7 = new Impf(globalval);
aux_var_7!f();
Intg aux_var_8 = new Impg(globalval);
aux_var_8!g();
Int aux_var_9 = 0;
return aux_var_9;
}
}
{
GLOBAL globalval = new GlobalVariables();
await globalval!initialize();
Intmain prog = new Impmain(globalval);
await prog!main();
}
