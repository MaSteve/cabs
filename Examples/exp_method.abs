module Cabs;
import * from ABS.StdLib;
interface ArrayInt {
Int getV(Int indx);
Unit setV(Int indx, Int value);
}
class ArrayIntC(Int size) implements ArrayInt{
List<Int> list = copy(0, size);
Int getV(Int indx) {
return nth(this.list, indx);
}
Unit setV(Int indx, Int value) {
Int i = 0;
List<Int> prev = Nil;
List<Int> post = list;
while (i < indx) {
Int elem = head(post);
prev = appendright(prev, elem);
post = tail(post);
i = i + 1;
}
prev = appendright(prev, value);
post = tail(post);
this.list = concatenate(prev, post);
}
}
interface ArrayBool {
Bool getV(Int indx);
Unit setV(Int indx, Bool value);
}
class ArrayBoolC(Int size) implements ArrayBool{
List<Bool> list = copy(False, size);
Bool getV(Int indx) {
return nth(this.list, indx);
}
Unit setV(Int indx, Bool value) {
Int i = 0;
List<Bool> prev = Nil;
List<Bool> post = list;
while (i < indx) {
Bool elem = head(post);
prev = appendright(prev, elem);
post = tail(post);
i = i + 1;
}
prev = appendright(prev, value);
post = tail(post);
this.list = concatenate(prev, post);
}
}
interface GLOBAL {
Int getgres();
Unit setgres(Int val);
Unit initialize();
}
class GlobalVariables() implements GLOBAL {
Int gres = 0;
Unit initialize() {
}
Int getgres() {
return gres;
}
Unit setgres(Int val) {
gres = val;
}
}
interface Intmain {
Int main();
}
interface Intexp {
Int exp(Int a, Int n);
}
class Impmain(GLOBAL globalval) implements Intmain {
Int main() {
Intexp aux_var_0 = new Impexp(globalval);
Int aux_var_1 = 10;
Int aux_var_2 = 3;
Int aux_var_3 = await aux_var_0!exp(aux_var_1, aux_var_2);
await globalval!setgres(aux_var_3);
Int pres = 0;
Intexp aux_var_4 = new Impexp(globalval);
Int aux_var_5 = 10;
Int aux_var_6 = 3;
Int aux_var_7 = await aux_var_4!exp(aux_var_5, aux_var_6);
pres = aux_var_7;
Int aux_var_8 = 0;
return aux_var_8;
}
}
class Impexp(GLOBAL globalval) implements Intexp {
Int exp(Int a, Int n) {
Int res = 0;
Int aux_var_9 = 0;
Bool aux_var_10 = (n < aux_var_9);
if (aux_var_10) {
Int aux_var_11 = 0;
res = aux_var_11;
} else {
Int aux_var_12 = 1;
res = aux_var_12;
Int aux_var_13 = 0;
Bool aux_var_14 = (n > aux_var_13);
while (aux_var_14) {
Int aux_var_15 = (res * a);
res = aux_var_15;
Int aux_var_16 = 1;
Int aux_var_17 = (n - aux_var_16);
n = aux_var_17;
Int aux_var_18 = 0;
Bool aux_var_19 = (n > aux_var_18);
aux_var_14 = aux_var_19;
}
}
return res;
}
}
{
GLOBAL globalval = new GlobalVariables();
await globalval!initialize();
Intmain prog = new Impmain(globalval);
await prog!main();
}
